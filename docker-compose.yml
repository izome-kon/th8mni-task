services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: 8pods-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: 8pods_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: 8pods-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: 8pods_db
      RATE_LIMIT_TTL: 60
      RATE_LIMIT_MAX: 100
      ITUNES_API_BASE_URL: https://itunes.apple.com
      CORS_ORIGIN: "*"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: 8pods-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
      NODE_ENV: production
    ports:
      - "3001:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
